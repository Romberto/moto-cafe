upstream innerdjango {
    server django-backend:8000;
    # connection to the inner django-backend service
    # here `django-backend` is the service's name in
    # docker-compose.yml, it is resolved by docker to inner IP address.
    # The `innerdjango` is just te name of upstream, used by nginx below. 
}
server {

    listen 80;
    server_name 1566825-cw73062.twc1.net;
    location / {

      return 301 https://$host$request_uri;
    }
    location /.well-known/acme-challenge/ {

        root /var/www/certbot;
    } 
} 
server {

    listen 443 ssl; # listen 443 port
    server_name 1566825-cw73062.twc1.net;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/1566825-cw73062.twc1.net/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/1566825-cw73062.twc1.net/privkey.pem; # <-this
    client_max_body_size 100M;
    location / {
        proxy_pass http://innerdjango; # pass these requests to internal upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
    }

    location /static/ {
        root /var/www;
    }
    location /media/ {
        root /var/www;
    }

    location /ws/notification/ {
        proxy_pass http://innerdjango;  # Проксирование WebSocket-соединений к вашему серверу Django/Gunicorn
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}
